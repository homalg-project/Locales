# SPDX-License-Identifier: GPL-2.0-or-later
# Locales: Locales, frames, coframes, meet semi-lattices of locally closed subsets, and Boolean algebras of constructible sets
#
# Implementations
#
# THIS FILE IS AUTOMATICALLY GENERATED, SEE CAP_project/CAP/gap/MethodRecordTools.gi

## ConegationOnMorphisms
InstallMethod( AddConegationOnMorphisms,
               [ IsCapCategory, IsFunction ],
               
  function( category, func )
    
    AddCapOperation( "ConegationOnMorphisms", category, func, -1 );
    
end );

InstallMethod( AddConegationOnMorphisms,
               [ IsCapCategory, IsFunction, IsInt ],
               
    FunctionWithNamedArguments(
        [
            [ "IsPrecompiledDerivation", false ],
        ],
        function( CAP_NAMED_ARGUMENTS, category, func, weight )
            
            AddCapOperation( "ConegationOnMorphisms", category, func, weight : IsPrecompiledDerivation := CAP_NAMED_ARGUMENTS.IsPrecompiledDerivation );
            
        end
    )
);

## ConegationOnMorphismsWithGivenConegations
InstallMethod( AddConegationOnMorphismsWithGivenConegations,
               [ IsCapCategory, IsFunction ],
               
  function( category, func )
    
    AddCapOperation( "ConegationOnMorphismsWithGivenConegations", category, func, -1 );
    
end );

InstallMethod( AddConegationOnMorphismsWithGivenConegations,
               [ IsCapCategory, IsFunction, IsInt ],
               
    FunctionWithNamedArguments(
        [
            [ "IsPrecompiledDerivation", false ],
        ],
        function( CAP_NAMED_ARGUMENTS, category, func, weight )
            
            AddCapOperation( "ConegationOnMorphismsWithGivenConegations", category, func, weight : IsPrecompiledDerivation := CAP_NAMED_ARGUMENTS.IsPrecompiledDerivation );
            
        end
    )
);

AddDerivationToCAP( ConegationOnMorphismsWithGivenConegations,
                    "ConegationOnMorphismsWithGivenConegations by calling ConegationOnMorphisms with the WithGiven argument(s) dropped",
                    [
                        [ ConegationOnMorphisms, 1 ],
                    ],
  function( cat, s, alpha, r )
    
    return ConegationOnMorphisms( cat, alpha );
        
end : is_with_given_derivation := true );

AddDerivationToCAP( ConegationOnMorphisms,
                    "ConegationOnMorphisms by calling ConegationOnMorphismsWithGivenConegations with the WithGiven object(s)",
                    [
                        [ ConegationOnMorphismsWithGivenConegations, 1 ],
                        [ ConegationOnObjects, 2 ],
                    ],
  function( cat, alpha )
    
    return ConegationOnMorphismsWithGivenConegations( cat, ConegationOnObjects( cat, Target( alpha ) ), alpha, ConegationOnObjects( cat, Source( alpha ) ) );
    
end : is_with_given_derivation := true );

## ConegationOnObjects
InstallMethod( AddConegationOnObjects,
               [ IsCapCategory, IsFunction ],
               
  function( category, func )
    
    AddCapOperation( "ConegationOnObjects", category, func, -1 );
    
end );

InstallMethod( AddConegationOnObjects,
               [ IsCapCategory, IsFunction, IsInt ],
               
    FunctionWithNamedArguments(
        [
            [ "IsPrecompiledDerivation", false ],
        ],
        function( CAP_NAMED_ARGUMENTS, category, func, weight )
            
            AddCapOperation( "ConegationOnObjects", category, func, weight : IsPrecompiledDerivation := CAP_NAMED_ARGUMENTS.IsPrecompiledDerivation );
            
        end
    )
);

## MorphismFromDoubleConegation
InstallMethod( AddMorphismFromDoubleConegation,
               [ IsCapCategory, IsFunction ],
               
  function( category, func )
    
    AddCapOperation( "MorphismFromDoubleConegation", category, func, -1 );
    
end );

InstallMethod( AddMorphismFromDoubleConegation,
               [ IsCapCategory, IsFunction, IsInt ],
               
    FunctionWithNamedArguments(
        [
            [ "IsPrecompiledDerivation", false ],
        ],
        function( CAP_NAMED_ARGUMENTS, category, func, weight )
            
            AddCapOperation( "MorphismFromDoubleConegation", category, func, weight : IsPrecompiledDerivation := CAP_NAMED_ARGUMENTS.IsPrecompiledDerivation );
            
        end
    )
);

## MorphismFromDoubleConegationWithGivenDoubleConegation
InstallMethod( AddMorphismFromDoubleConegationWithGivenDoubleConegation,
               [ IsCapCategory, IsFunction ],
               
  function( category, func )
    
    AddCapOperation( "MorphismFromDoubleConegationWithGivenDoubleConegation", category, func, -1 );
    
end );

InstallMethod( AddMorphismFromDoubleConegationWithGivenDoubleConegation,
               [ IsCapCategory, IsFunction, IsInt ],
               
    FunctionWithNamedArguments(
        [
            [ "IsPrecompiledDerivation", false ],
        ],
        function( CAP_NAMED_ARGUMENTS, category, func, weight )
            
            AddCapOperation( "MorphismFromDoubleConegationWithGivenDoubleConegation", category, func, weight : IsPrecompiledDerivation := CAP_NAMED_ARGUMENTS.IsPrecompiledDerivation );
            
        end
    )
);

AddDerivationToCAP( MorphismFromDoubleConegationWithGivenDoubleConegation,
                    "MorphismFromDoubleConegationWithGivenDoubleConegation by calling MorphismFromDoubleConegation with the WithGiven argument(s) dropped",
                    [
                        [ MorphismFromDoubleConegation, 1 ],
                    ],
  function( cat, a, s )
    
    return MorphismFromDoubleConegation( cat, a );
        
end : is_with_given_derivation := true );

AddDerivationToCAP( MorphismFromDoubleConegation,
                    "MorphismFromDoubleConegation by calling MorphismFromDoubleConegationWithGivenDoubleConegation with the WithGiven object(s)",
                    [
                        [ MorphismFromDoubleConegationWithGivenDoubleConegation, 1 ],
                        [ ConegationOnObjects, 2 ],
                    ],
  function( cat, a )
    
    return MorphismFromDoubleConegationWithGivenDoubleConegation( cat, a, ConegationOnObjects( cat, ConegationOnObjects( cat, a ) ) );
    
end : is_with_given_derivation := true );
